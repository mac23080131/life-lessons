import { PrismaClient } from '@prisma/client';

const prisma = new PrismaClient();

async function seedConcepts() {
  console.log('üå± Seeding Concept Knowledge Base...\n');

  // Create Categories
  console.log('üìö Creating categories...');
  const categories = await Promise.all([
    prisma.conceptCategory.upsert({
      where: { key: 'mindfulness' },
      update: {},
      create: {
        key: 'mindfulness',
        name: 'Ch√°nh ni·ªám',
        nameEn: 'Mindfulness',
        description: 'Th·ª±c h√†nh t·ªânh th·ª©c trong hi·ªán t·∫°i',
        icon: 'brain',
        color: 'purple',
        order: 1,
      },
    }),
    prisma.conceptCategory.upsert({
      where: { key: 'growth_mindset' },
      update: {},
      create: {
        key: 'growth_mindset',
        name: 'T∆∞ duy ph√°t tri·ªÉn',
        nameEn: 'Growth Mindset',
        description: 'Tin v√†o kh·∫£ nƒÉng ph√°t tri·ªÉn b·∫£n th√¢n',
        icon: 'trending-up',
        color: 'green',
        order: 2,
      },
    }),
    prisma.conceptCategory.upsert({
      where: { key: 'emotional_intelligence' },
      update: {},
      create: {
        key: 'emotional_intelligence',
        name: 'Tr√≠ tu·ªá c·∫£m x√∫c',
        nameEn: 'Emotional Intelligence',
        description: 'Hi·ªÉu v√† qu·∫£n l√Ω c·∫£m x√∫c',
        icon: 'heart',
        color: 'blue',
        order: 3,
      },
    }),
    prisma.conceptCategory.upsert({
      where: { key: 'resilience' },
      update: {},
      create: {
        key: 'resilience',
        name: 'S·ª©c b·ªÅn t√¢m l√Ω',
        nameEn: 'Resilience',
        description: 'Kh·∫£ nƒÉng ph·ª•c h·ªìi sau kh√≥ khƒÉn',
        icon: 'shield',
        color: 'orange',
        order: 4,
      },
    }),
  ]);

  console.log(`‚úÖ Created ${categories.length} categories\n`);

  // Concept 1: Growth Mindset
  console.log('üìñ Creating concepts...');
  const growthMindset = await prisma.concept.upsert({
    where: { key: 'growth_mindset_core' },
    update: {},
    create: {
      key: 'growth_mindset_core',
      slug: 'growth-mindset',
      title: 'T∆∞ duy ph√°t tri·ªÉn',
      titleEn: 'Growth Mindset',
      summary: 'Tin r·∫±ng kh·∫£ nƒÉng c√≥ th·ªÉ ph√°t tri·ªÉn qua n·ªó l·ª±c v√† h·ªçc h·ªèi',
      summaryEn: 'The belief that abilities can be developed through effort and learning',
      description: `T∆∞ duy ph√°t tri·ªÉn l√† ni·ªÅm tin r·∫±ng tr√≠ th√¥ng minh v√† t√†i nƒÉng kh√¥ng ph·∫£i l√† c·ªë ƒë·ªãnh m√† c√≥ th·ªÉ ƒë∆∞·ª£c ph√°t tri·ªÉn qua s·ª± n·ªó l·ª±c, h·ªçc h·ªèi v√† ki√™n tr√¨.

Carol Dweck, gi√°o s∆∞ t√¢m l√Ω h·ªçc t·∫°i Stanford, ƒë√£ nghi√™n c·ª©u v√† ph√°t hi·ªán ra r·∫±ng c√°ch ch√∫ng ta nh√¨n nh·∫≠n kh·∫£ nƒÉng c·ªßa m√¨nh c√≥ ·∫£nh h∆∞·ªüng s√¢u s·∫Øc ƒë·∫øn ƒë·ªông l·ª±c, hi·ªáu su·∫•t v√† th√†nh c√¥ng trong cu·ªôc s·ªëng.

Ng∆∞·ªùi c√≥ t∆∞ duy ph√°t tri·ªÉn:
- Xem th√°ch th·ª©c l√† c∆° h·ªôi ƒë·ªÉ h·ªçc h·ªèi
- Tin r·∫±ng n·ªó l·ª±c d·∫´n ƒë·∫øn s·ª± th√†nh th·∫°o
- H·ªçc h·ªèi t·ª´ ph·∫£n h·ªìi v√† ch·ªâ tr√≠ch
- L·∫•y c·∫£m h·ª©ng t·ª´ th√†nh c√¥ng c·ªßa ng∆∞·ªùi kh√°c

Ng∆∞·ª£c l·∫°i, ng∆∞·ªùi c√≥ t∆∞ duy c·ªë ƒë·ªãnh (fixed mindset):
- Tr√°nh th√°ch th·ª©c v√¨ s·ª£ th·∫•t b·∫°i
- Tin r·∫±ng t√†i nƒÉng l√† b·∫©m sinh
- B·ªè qua ph·∫£n h·ªìi h·ªØu √≠ch
- C·∫£m th·∫•y b·ªã ƒëe d·ªça b·ªüi th√†nh c√¥ng c·ªßa ng∆∞·ªùi kh√°c`,
      descriptionEn: `Growth mindset is the belief that intelligence and talents are not fixed but can be developed through effort, learning, and persistence.

Carol Dweck, a psychology professor at Stanford, discovered that how we view our abilities has a profound impact on our motivation, performance, and success in life.

People with a growth mindset:
- See challenges as opportunities to learn
- Believe effort leads to mastery
- Learn from feedback and criticism
- Find inspiration in others' success

In contrast, people with a fixed mindset:
- Avoid challenges for fear of failure
- Believe talent is innate
- Ignore useful feedback
- Feel threatened by others' success`,
      categoryId: categories.find(c => c.key === 'growth_mindset')!.id,
      tags: ['mindset', 'learning', 'development', 'psychology'],
      difficulty: 'BEGINNER',
      aiContext: 'Use when user shows fixed mindset language ("I can\'t", "I\'m not good at"), or when facing challenges',
      keywords: ['growth', 'learning', 'effort', 'challenge', 'mindset', 'development', 'ability'],
      source: 'Carol Dweck - Mindset: The New Psychology of Success',
    },
  });

  // Add Practices for Growth Mindset
  await prisma.conceptPractice.createMany({
    data: [
      {
        conceptId: growthMindset.id,
        title: 'Thay ƒë·ªïi ng√¥n ng·ªØ "Ch∆∞a"',
        titleEn: 'The Power of "Yet"',
        description: 'Th√™m t·ª´ "ch∆∞a" v√†o c√°c c√¢u ti√™u c·ª±c ƒë·ªÉ m·ªü ra kh·∫£ nƒÉng',
        descriptionEn: 'Add "yet" to negative statements to open possibilities',
        steps: [
          'Nh·∫≠n di·ªán c√°c c√¢u ti√™u c·ª±c: "T√¥i kh√¥ng th·ªÉ l√†m ƒëi·ªÅu n√†y"',
          'Th√™m "ch∆∞a" v√†o cu·ªëi: "T√¥i ch∆∞a th·ªÉ l√†m ƒëi·ªÅu n√†y"',
          'Th√™m h√†nh ƒë·ªông: "T√¥i ch∆∞a th·ªÉ l√†m ƒëi·ªÅu n√†y, nh∆∞ng t√¥i c√≥ th·ªÉ h·ªçc"',
          'L·∫∑p l·∫°i trong 21 ng√†y ƒë·ªÉ h√¨nh th√†nh th√≥i quen',
        ],
        stepsEn: [
          'Identify negative statements: "I can\'t do this"',
          'Add "yet" at the end: "I can\'t do this yet"',
          'Add action: "I can\'t do this yet, but I can learn"',
          'Repeat for 21 days to form a habit',
        ],
        duration: 5,
        difficulty: 'BEGINNER',
        order: 1,
      },
      {
        conceptId: growthMindset.id,
        title: 'Nh·∫≠t k√Ω h·ªçc h·ªèi',
        titleEn: 'Learning Journal',
        description: 'Ghi l·∫°i nh·ªØng g√¨ b·∫°n h·ªçc ƒë∆∞·ª£c m·ªói ng√†y',
        descriptionEn: 'Record what you learn each day',
        steps: [
          'M·ªói t·ªëi, d√†nh 5 ph√∫t vi·∫øt nh·∫≠t k√Ω',
          'Tr·∫£ l·ªùi: "H√¥m nay t√¥i ƒë√£ h·ªçc ƒë∆∞·ª£c g√¨?"',
          'Ghi l·∫°i c·∫£ nh·ªØng sai l·∫ßm v√† b√†i h·ªçc',
          'Ghi nh·∫≠n n·ªó l·ª±c c·ªßa b·∫£n th√¢n, kh√¥ng ch·ªâ k·∫øt qu·∫£',
          'Xem l·∫°i sau 1 th√°ng ƒë·ªÉ th·∫•y s·ª± ti·∫øn b·ªô',
        ],
        stepsEn: [
          'Each evening, spend 5 minutes journaling',
          'Answer: "What did I learn today?"',
          'Record both mistakes and lessons',
          'Acknowledge your effort, not just results',
          'Review after 1 month to see progress',
        ],
        duration: 10,
        difficulty: 'BEGINNER',
        order: 2,
      },
    ],
  });

  // Add Examples
  await prisma.conceptExample.createMany({
    data: [
      {
        conceptId: growthMindset.id,
        title: 'Michael Jordan v√† th·∫•t b·∫°i',
        titleEn: 'Michael Jordan and Failure',
        text: 'Michael Jordan, m·ªôt trong nh·ªØng c·∫ßu th·ªß b√≥ng r·ªï vƒ© ƒë·∫°i nh·∫•t, t·ª´ng n√≥i: "T√¥i ƒë√£ th·∫•t b·∫°i h∆°n 9,000 c√∫ n√©m trong s·ª± nghi·ªáp. T√¥i ƒë√£ thua g·∫ßn 300 tr·∫≠n. 26 l·∫ßn t√¥i ƒë∆∞·ª£c giao nhi·ªám v·ª• th·ª±c hi·ªán c√∫ n√©m quy·∫øt ƒë·ªãnh v√† t√¥i ƒë√£ th·∫•t b·∫°i. T√¥i ƒë√£ th·∫•t b·∫°i nhi·ªÅu l·∫ßn trong ƒë·ªùi. V√† ƒë√≥ ch√≠nh l√† l√Ω do t√¥i th√†nh c√¥ng."',
        textEn: 'Michael Jordan, one of the greatest basketball players, once said: "I\'ve missed more than 9,000 shots in my career. I\'ve lost almost 300 games. 26 times I\'ve been trusted to take the game-winning shot and missed. I\'ve failed over and over again in my life. And that is why I succeed."',
        source: 'Nike Commercial',
        order: 1,
      },
      {
        conceptId: growthMindset.id,
        title: 'H·ªçc ng√¥n ng·ªØ m·ªõi',
        titleEn: 'Learning a New Language',
        text: 'An b·∫Øt ƒë·∫ßu h·ªçc ti·∫øng Anh ·ªü tu·ªïi 35. Ban ƒë·∫ßu c√¥ r·∫•t ng·∫°i n√≥i v√¨ s·ª£ sai. Sau khi t√¨m hi·ªÉu v·ªÅ growth mindset, An thay ƒë·ªïi c√°ch nh√¨n: m·ªói l·ªói sai l√† m·ªôt c∆° h·ªôi h·ªçc. C√¥ b·∫Øt ƒë·∫ßu n√≥i nhi·ªÅu h∆°n, ghi ch√©p l·ªói sai v√† s·ª≠a. Sau 2 nƒÉm, An c√≥ th·ªÉ giao ti·∫øp t·ª± tin b·∫±ng ti·∫øng Anh.',
        textEn: 'An started learning English at age 35. Initially, she was afraid to speak for fear of making mistakes. After learning about growth mindset, An changed her perspective: every mistake is a learning opportunity. She started speaking more, noting errors and correcting them. After 2 years, An can communicate confidently in English.',
        order: 2,
      },
    ],
  });

  // Add Questions
  await prisma.conceptQuestion.createMany({
    data: [
      {
        conceptId: growthMindset.id,
        question: 'L·∫ßn g·∫ßn ƒë√¢y nh·∫•t b·∫°n n√≥i "T√¥i kh√¥ng th·ªÉ" l√† khi n√†o? ƒêi·ªÅu g√¨ s·∫Ω thay ƒë·ªïi n·∫øu b·∫°n n√≥i "T√¥i ch∆∞a th·ªÉ"?',
        questionEn: 'When was the last time you said "I can\'t"? What would change if you said "I can\'t yet"?',
        type: 'REFLECTIVE',
        context: 'S·ª≠ d·ª•ng khi ng∆∞·ªùi d√πng th·ªÉ hi·ªán t∆∞ duy c·ªë ƒë·ªãnh',
        contextEn: 'Use when user shows fixed mindset thinking',
        order: 1,
      },
      {
        conceptId: growthMindset.id,
        question: 'B·∫°n ƒë√£ h·ªçc ƒë∆∞·ª£c g√¨ t·ª´ m·ªôt th·∫•t b·∫°i g·∫ßn ƒë√¢y?',
        questionEn: 'What did you learn from a recent failure?',
        type: 'PROVOCATIVE',
        context: 'Sau khi ng∆∞·ªùi d√πng chia s·∫ª v·ªÅ th·∫•t b·∫°i',
        contextEn: 'After user shares about a failure',
        order: 2,
      },
      {
        conceptId: growthMindset.id,
        question: 'H√†nh ƒë·ªông c·ª• th·ªÉ n√†o b·∫°n c√≥ th·ªÉ l√†m ngay h√¥m nay ƒë·ªÉ ph√°t tri·ªÉn k·ªπ nƒÉng b·∫°n mu·ªën c·∫£i thi·ªán?',
        questionEn: 'What specific action can you take today to develop the skill you want to improve?',
        type: 'ACTION_ORIENTED',
        order: 3,
      },
    ],
  });

  console.log('‚úÖ Created Growth Mindset concept\n');

  // Concept 2: Gratitude Practice
  const gratitude = await prisma.concept.upsert({
    where: { key: 'gratitude_practice' },
    update: {},
    create: {
      key: 'gratitude_practice',
      slug: 'gratitude-practice',
      title: 'Th·ª±c h√†nh bi·∫øt ∆°n',
      titleEn: 'Gratitude Practice',
      summary: 'T·∫≠p trung v√†o nh·ªØng ƒëi·ªÅu t√≠ch c·ª±c ƒë·ªÉ tƒÉng h·∫°nh ph√∫c',
      summaryEn: 'Focus on positive aspects to increase happiness',
      description: `Th·ª±c h√†nh bi·∫øt ∆°n l√† vi·ªác ch·ªß ƒë·ªông nh·∫≠n di·ªán v√† tr√¢n tr·ªçng nh·ªØng ƒëi·ªÅu t·ªët ƒë·∫πp trong cu·ªôc s·ªëng, d√π l·ªõn hay nh·ªè.

Nghi√™n c·ª©u khoa h·ªçc cho th·∫•y th·ª±c h√†nh bi·∫øt ∆°n th∆∞·ªùng xuy√™n c√≥ th·ªÉ:
- TƒÉng m·ª©c ƒë·ªô h·∫°nh ph√∫c v√† s·ª©c kh·ªèe tinh th·∫ßn
- Gi·∫£m stress v√† tr·∫ßm c·∫£m
- C·∫£i thi·ªán ch·∫•t l∆∞·ª£ng gi·∫•c ng·ªß
- TƒÉng c∆∞·ªùng m·ªëi quan h·ªá x√£ h·ªôi
- N√¢ng cao s·ª©c ƒë·ªÅ kh√°ng v·ªõi ngh·ªãch c·∫£nh

Robert Emmons, chuy√™n gia h√†ng ƒë·∫ßu v·ªÅ bi·∫øt ∆°n, ph√°t hi·ªán r·∫±ng ng∆∞·ªùi vi·∫øt nh·∫≠t k√Ω bi·∫øt ∆°n m·ªói tu·∫ßn c√≥ m·ª©c ƒë·ªô l·∫°c quan cao h∆°n 25% v√† c·∫£m th·∫•y t·ªët h∆°n v·ªÅ cu·ªôc s·ªëng c·ªßa h·ªç.`,
      descriptionEn: `Gratitude practice is actively recognizing and appreciating the good things in life, whether big or small.

Scientific research shows that regular gratitude practice can:
- Increase happiness and mental health
- Reduce stress and depression
- Improve sleep quality
- Strengthen social relationships
- Enhance resilience to adversity

Robert Emmons, a leading gratitude expert, found that people who write gratitude journals weekly are 25% more optimistic and feel better about their lives.`,
      categoryId: categories.find(c => c.key === 'mindfulness')!.id,
      tags: ['gratitude', 'happiness', 'mindfulness', 'positive psychology'],
      difficulty: 'BEGINNER',
      aiContext: 'Use when user focuses on problems, complains, or shows negativity bias',
      keywords: ['gratitude', 'thankful', 'appreciate', 'blessing', 'positive', 'happy'],
      source: 'Robert Emmons - Thanks!: How the New Science of Gratitude Can Make You Happier',
    },
  });

  await prisma.conceptPractice.createMany({
    data: [
      {
        conceptId: gratitude.id,
        title: '3 ƒëi·ªÅu t·ªët ƒë·∫πp',
        titleEn: 'Three Good Things',
        description: 'Vi·∫øt 3 ƒëi·ªÅu t·ªët ƒë·∫πp m·ªói ng√†y tr∆∞·ªõc khi ng·ªß',
        descriptionEn: 'Write 3 good things each day before sleep',
        steps: [
          'M·ªói t·ªëi tr∆∞·ªõc khi ng·ªß, d√†nh 5-10 ph√∫t',
          'Vi·∫øt ra 3 ƒëi·ªÅu t·ªët ƒë·∫πp ƒë√£ x·∫£y ra trong ng√†y',
          'V·ªõi m·ªói ƒëi·ªÅu, ghi l·∫°i "T·∫°i sao ƒëi·ªÅu n√†y x·∫£y ra?"',
          'Th·ª±c hi·ªán li√™n t·ª•c trong 2 tu·∫ßn',
          'Ch√∫ √Ω s·ª± thay ƒë·ªïi trong t√¢m tr·∫°ng',
        ],
        stepsEn: [
          'Each evening before sleep, spend 5-10 minutes',
          'Write down 3 good things that happened today',
          'For each, note "Why did this happen?"',
          'Do this consistently for 2 weeks',
          'Notice the change in your mood',
        ],
        duration: 10,
        difficulty: 'BEGINNER',
        order: 1,
      },
    ],
  });

  await prisma.conceptExample.createMany({
    data: [
      {
        conceptId: gratitude.id,
        title: 'Nh·∫≠t k√Ω bi·∫øt ∆°n c·ªßa Oprah',
        titleEn: 'Oprah\'s Gratitude Journal',
        text: 'Oprah Winfrey ƒë√£ vi·∫øt nh·∫≠t k√Ω bi·∫øt ∆°n trong su·ªët nhi·ªÅu nƒÉm. B√† chia s·∫ª: "T√¥i bi·∫øt ch·∫Øc ch·∫Øn r·∫±ng vi·ªác tr√¢n tr·ªçng nh·ªØng g√¨ b·∫°n c√≥ l√† c√°ch ch·∫Øc ch·∫Øn ƒë·ªÉ c√≥ th√™m nhi·ªÅu ƒëi·ªÅu t·ªët ƒë·∫πp. M·ªói ng√†y vi·∫øt 5 ƒëi·ªÅu bi·∫øt ∆°n ƒë√£ thay ƒë·ªïi c·∫£ cu·ªôc ƒë·ªùi t√¥i."',
        textEn: 'Oprah Winfrey has kept a gratitude journal for many years. She shares: "I know for sure that appreciating what you have is a sure way to have more. Writing 5 things to be grateful for each day has changed my entire life."',
        source: 'The Oprah Winfrey Show',
        order: 1,
      },
    ],
  });

  await prisma.conceptQuestion.createMany({
    data: [
      {
        conceptId: gratitude.id,
        question: '3 ƒëi·ªÅu b·∫°n bi·∫øt ∆°n nh·∫•t h√¥m nay l√† g√¨?',
        questionEn: 'What are 3 things you\'re most grateful for today?',
        type: 'REFLECTIVE',
        order: 1,
      },
      {
        conceptId: gratitude.id,
        question: 'Ai l√† ng∆∞·ªùi ƒë√£ gi√∫p ƒë·ª° b·∫°n g·∫ßn ƒë√¢y m√† b·∫°n ch∆∞a n√≥i "c·∫£m ∆°n"?',
        questionEn: 'Who helped you recently that you haven\'t thanked yet?',
        type: 'ACTION_ORIENTED',
        order: 2,
      },
    ],
  });

  console.log('‚úÖ Created Gratitude Practice concept\n');

  // Concept 3: Reframing
  const reframing = await prisma.concept.upsert({
    where: { key: 'cognitive_reframing' },
    update: {},
    create: {
      key: 'cognitive_reframing',
      slug: 'cognitive-reframing',
      title: 'T√°i khung nh·∫≠n th·ª©c',
      titleEn: 'Cognitive Reframing',
      summary: 'Thay ƒë·ªïi c√°ch nh√¨n nh·∫≠n t√¨nh hu·ªëng ƒë·ªÉ thay ƒë·ªïi c·∫£m x√∫c',
      summaryEn: 'Change how you view situations to change emotions',
      description: `T√°i khung nh·∫≠n th·ª©c l√† k·ªπ thu·∫≠t t√¢m l√Ω h·ªçc nh·∫≠n th·ª©c ƒë·ªÉ thay ƒë·ªïi c√°ch ch√∫ng ta suy nghƒ© v·ªÅ m·ªôt t√¨nh hu·ªëng, t·ª´ ƒë√≥ thay ƒë·ªïi c√°ch ch√∫ng ta c·∫£m nh·∫≠n v·ªÅ n√≥.

√ù t∆∞·ªüng c·ªët l√µi: Kh√¥ng ph·∫£i s·ª± ki·ªán t·∫°o ra c·∫£m x√∫c, m√† c√°ch ch√∫ng ta gi·∫£i th√≠ch s·ª± ki·ªán m·ªõi t·∫°o ra c·∫£m x√∫c.

V√≠ d·ª•:
- T√¨nh hu·ªëng: B·ªã t·ª´ ch·ªëi c√¥ng vi·ªác
- Khung ti√™u c·ª±c: "T√¥i kh√¥ng ƒë·ªß gi·ªèi"
- Khung t√≠ch c·ª±c: "ƒê√¢y l√† c∆° h·ªôi t√¨m c√¥ng vi·ªác ph√π h·ª£p h∆°n"

C√°c b∆∞·ªõc t√°i khung:
1. Nh·∫≠n di·ªán suy nghƒ© ti√™u c·ª±c
2. Th√°ch th·ª©c suy nghƒ© ƒë√≥: "C√≥ b·∫±ng ch·ª©ng g√¨ kh√¥ng?"
3. T√¨m c√°ch nh√¨n thay th·∫ø t√≠ch c·ª±c h∆°n
4. Ch·ªçn khung ph√π h·ª£p v·ªõi gi√° tr·ªã v√† m·ª•c ti√™u`,
      descriptionEn: `Cognitive reframing is a cognitive psychology technique to change how we think about a situation, thereby changing how we feel about it.

Core idea: It's not events that create emotions, but how we interpret events.

Example:
- Situation: Rejected from a job
- Negative frame: "I'm not good enough"
- Positive frame: "This is an opportunity to find a better fit"

Reframing steps:
1. Identify negative thought
2. Challenge it: "What's the evidence?"
3. Find a more positive alternative view
4. Choose a frame aligned with values and goals`,
      categoryId: categories.find(c => c.key === 'emotional_intelligence')!.id,
      tags: ['cognitive', 'reframing', 'perspective', 'emotions'],
      difficulty: 'INTERMEDIATE',
      aiContext: 'Use when user expresses negative interpretation of events',
      keywords: ['perspective', 'reframe', 'interpretation', 'cognitive', 'thinking'],
    },
  });

  await prisma.conceptPractice.createMany({
    data: [
      {
        conceptId: reframing.id,
        title: 'K·ªπ thu·∫≠t ABC',
        titleEn: 'ABC Technique',
        description: 'Ph√¢n t√≠ch v√† thay ƒë·ªïi chu·ªói suy nghƒ©',
        descriptionEn: 'Analyze and change thought patterns',
        steps: [
          'A (Activating event): S·ª± ki·ªán g√¨ ƒë√£ x·∫£y ra?',
          'B (Belief): B·∫°n nghƒ© g√¨ v·ªÅ s·ª± ki·ªán ƒë√≥?',
          'C (Consequence): B·∫°n c·∫£m th·∫•y v√† h√†nh ƒë·ªông th·∫ø n√†o?',
          'D (Dispute): Th√°ch th·ª©c ni·ªÅm tin: "ƒêi·ªÅu n√†y c√≥ ƒë√∫ng kh√¥ng?"',
          'E (Effect): Ni·ªÅm tin m·ªõi v√† c·∫£m x√∫c m·ªõi',
        ],
        stepsEn: [
          'A (Activating event): What happened?',
          'B (Belief): What did you think about it?',
          'C (Consequence): How did you feel and act?',
          'D (Dispute): Challenge the belief: "Is this true?"',
          'E (Effect): New belief and new emotion',
        ],
        duration: 15,
        difficulty: 'INTERMEDIATE',
        order: 1,
      },
    ],
  });

  await prisma.conceptQuestion.createMany({
    data: [
      {
        conceptId: reframing.id,
        question: 'C√°ch kh√°c ƒë·ªÉ nh√¨n nh·∫≠n t√¨nh hu·ªëng n√†y l√† g√¨?',
        questionEn: 'What\'s another way to view this situation?',
        type: 'PROVOCATIVE',
        order: 1,
      },
      {
        conceptId: reframing.id,
        question: 'N·∫øu ƒëi·ªÅu t·ªìi t·ªá nh·∫•t x·∫£y ra, b·∫°n s·∫Ω h·ªçc ƒë∆∞·ª£c g√¨?',
        questionEn: 'If the worst happens, what would you learn?',
        type: 'EXPLORATORY',
        order: 2,
      },
    ],
  });

  console.log('‚úÖ Created Cognitive Reframing concept\n');

  // Add some relations (with upsert to avoid duplicates)
  try {
    await prisma.conceptRelation.upsert({
      where: {
        aId_bId_type: {
          aId: growthMindset.id,
          bId: reframing.id,
          type: 'RELATED',
        },
      },
      update: {},
      create: {
        aId: growthMindset.id,
        bId: reframing.id,
        type: 'RELATED',
      },
    });

    await prisma.conceptRelation.upsert({
      where: {
        aId_bId_type: {
          aId: gratitude.id,
          bId: reframing.id,
          type: 'RELATED',
        },
      },
      update: {},
      create: {
        aId: gratitude.id,
        bId: reframing.id,
        type: 'RELATED',
      },
    });
  } catch (error) {
    console.log('Note: Some relations may already exist');
  }

  console.log('‚úÖ Created concept relations\n');

  // Summary
  const conceptCount = await prisma.concept.count();
  const categoryCount = await prisma.conceptCategory.count();
  const practiceCount = await prisma.conceptPractice.count();
  const exampleCount = await prisma.conceptExample.count();
  const questionCount = await prisma.conceptQuestion.count();

  console.log('üìä Seed Summary:');
  console.log(`   Categories: ${categoryCount}`);
  console.log(`   Concepts: ${conceptCount}`);
  console.log(`   Practices: ${practiceCount}`);
  console.log(`   Examples: ${exampleCount}`);
  console.log(`   Questions: ${questionCount}`);
  console.log('\n‚úÖ Concept seeding completed!\n');
}

seedConcepts()
  .catch((e) => {
    console.error('‚ùå Error seeding concepts:', e);
    process.exit(1);
  })
  .finally(async () => {
    await prisma.$disconnect();
  });
