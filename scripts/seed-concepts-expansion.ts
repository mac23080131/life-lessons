import { PrismaClient } from '@prisma/client';

const prisma = new PrismaClient();

async function expandConcepts() {
  console.log('üå± Expanding Concept Knowledge Base...\n');

  // Get existing categories
  const categories = await prisma.conceptCategory.findMany();
  const mindfulnessCategory = categories.find(c => c.key === 'mindfulness');
  const growthMindsetCategory = categories.find(c => c.key === 'growth_mindset');
  const emotionalIntelligenceCategory = categories.find(c => c.key === 'emotional_intelligence');
  const resilienceCategory = categories.find(c => c.key === 'resilience');

  // Create new categories
  console.log('üìö Creating new categories...');
  
  const productivityCategory = await prisma.conceptCategory.upsert({
    where: { key: 'productivity' },
    update: {},
    create: {
      key: 'productivity',
      name: 'NƒÉng su·∫•t',
      nameEn: 'Productivity',
      description: 'L√†m vi·ªác hi·ªáu qu·∫£ v√† ƒë·∫°t ƒë∆∞·ª£c m·ª•c ti√™u',
      icon: 'zap',
      color: 'orange',
      order: 5,
    },
  });

  const relationshipsCategory = await prisma.conceptCategory.upsert({
    where: { key: 'relationships' },
    update: {},
    create: {
      key: 'relationships',
      name: 'M·ªëi quan h·ªá',
      nameEn: 'Relationships',
      description: 'X√¢y d·ª±ng v√† duy tr√¨ m·ªëi quan h·ªá l√†nh m·∫°nh',
      icon: 'users',
      color: 'pink',
      order: 6,
    },
  });

  console.log('‚úÖ Created 2 new categories\n');

  // ========== MINDFULNESS CONCEPTS ==========
  console.log('üìñ Adding Mindfulness concepts...');

  // 1. Present Moment Awareness
  const presentMoment = await prisma.concept.upsert({
    where: { key: 'present_moment_awareness' },
    update: {},
    create: {
      key: 'present_moment_awareness',
      slug: 'present-moment-awareness',
      title: 'T·ªânh th·ª©c hi·ªán t·∫°i',
      titleEn: 'Present Moment Awareness',
      summary: 'T·∫≠p trung ho√†n to√†n v√†o th·ªùi kh·∫Øc hi·ªán t·∫°i, kh√¥ng ph√°n x√©t',
      summaryEn: 'Focus fully on the present moment without judgment',
      description: `T·ªânh th·ª©c hi·ªán t·∫°i l√† kh·∫£ nƒÉng ƒë∆∞a to√†n b·ªô s·ª± ch√∫ √Ω v√†o kho·∫£nh kh·∫Øc hi·ªán t·∫°i, nh·∫≠n bi·∫øt nh·ªØng g√¨ ƒëang x·∫£y ra trong v√† xung quanh m√¨nh m√† kh√¥ng b·ªã cu·ªën v√†o qu√° kh·ª© hay t∆∞∆°ng lai.

Jon Kabat-Zinn, ng∆∞·ªùi s√°ng l·∫≠p ch∆∞∆°ng tr√¨nh MBSR (Mindfulness-Based Stress Reduction), ƒë·ªãnh nghƒ©a mindfulness l√† "ch√∫ √Ω m·ªôt c√°ch c√≥ m·ª•c ƒë√≠ch v√†o hi·ªán t·∫°i, kh√¥ng ph√°n x√©t".

L·ª£i √≠ch c·ªßa t·ªânh th·ª©c hi·ªán t·∫°i:
- Gi·∫£m cƒÉng th·∫≥ng v√† lo √¢u
- TƒÉng kh·∫£ nƒÉng t·∫≠p trung
- C·∫£i thi·ªán ch·∫•t l∆∞·ª£ng m·ªëi quan h·ªá
- TƒÉng c∆∞·ªùng s·ª©c kh·ªèe tinh th·∫ßn
- Gi√∫p ƒë∆∞a ra quy·∫øt ƒë·ªãnh t·ªët h∆°n

Khi s·ªëng trong hi·ªán t·∫°i, ch√∫ng ta:
- Tho√°t kh·ªèi v√≤ng xo√°y suy nghƒ© ti√™u c·ª±c
- Tr·∫£i nghi·ªám cu·ªôc s·ªëng ƒë·∫ßy ƒë·ªß h∆°n
- Ph·∫£n ·ª©ng thay v√¨ ph·∫£n x·∫°
- Nh·∫≠n ra v√† qu·∫£n l√Ω c·∫£m x√∫c t·ªët h∆°n`,
      descriptionEn: `Present moment awareness is the ability to bring full attention to the current moment, recognizing what's happening in and around us without being pulled into past or future.

Jon Kabat-Zinn, founder of MBSR (Mindfulness-Based Stress Reduction), defines mindfulness as "paying attention in a particular way: on purpose, in the present moment, and non-judgmentally."

Benefits of present moment awareness:
- Reduces stress and anxiety
- Increases focus and concentration
- Improves relationship quality
- Enhances mental health
- Helps make better decisions

When living in the present, we:
- Break free from negative thought spirals
- Experience life more fully
- Respond instead of react
- Recognize and manage emotions better`,
      categoryId: mindfulnessCategory!.id,
      tags: ['mindfulness', 'awareness', 'presence', 'meditation'],
      difficulty: 'BEGINNER',
      aiContext: 'Use when user is anxious about future or dwelling on past',
      keywords: ['present', 'moment', 'now', 'awareness', 'here', 'mindful'],
      source: 'Jon Kabat-Zinn - Wherever You Go, There You Are',
    },
  });

  await prisma.conceptPractice.createMany({
    data: [
      {
        conceptId: presentMoment.id,
        title: 'H∆°i th·ªü 5-4-3-2-1',
        titleEn: '5-4-3-2-1 Breathing',
        description: 'K·ªπ thu·∫≠t grounding ƒë∆∞a b·∫°n v·ªÅ hi·ªán t·∫°i qua 5 gi√°c quan',
        descriptionEn: 'Grounding technique to bring you to present through 5 senses',
        steps: [
          'Nh·∫≠n bi·∫øt 5 th·ª© b·∫°n nh√¨n th·∫•y',
          'Nh·∫≠n bi·∫øt 4 th·ª© b·∫°n ch·∫°m ƒë∆∞·ª£c',
          'Nh·∫≠n bi·∫øt 3 th·ª© b·∫°n nghe th·∫•y',
          'Nh·∫≠n bi·∫øt 2 th·ª© b·∫°n ng·ª≠i ƒë∆∞·ª£c',
          'Nh·∫≠n bi·∫øt 1 th·ª© b·∫°n n·∫øm ƒë∆∞·ª£c',
        ],
        stepsEn: [
          'Notice 5 things you see',
          'Notice 4 things you can touch',
          'Notice 3 things you hear',
          'Notice 2 things you smell',
          'Notice 1 thing you taste',
        ],
        duration: 3,
        difficulty: 'BEGINNER',
        order: 1,
      },
      {
        conceptId: presentMoment.id,
        title: 'Mindful Walking',
        titleEn: 'Mindful Walking',
        description: 'ƒêi b·ªô ch√°nh ni·ªám, ch√∫ √Ω t·ª´ng b∆∞·ªõc ch√¢n',
        descriptionEn: 'Walking meditation, noticing each step',
        steps: [
          'Ch·ªçn m·ªôt ƒëo·∫°n ƒë∆∞·ªùng ng·∫Øn (10-15 b∆∞·ªõc)',
          'ƒêi ch·∫≠m, ch√∫ √Ω c·∫£m gi√°c ch√¢n ch·∫°m ƒë·∫•t',
          'Nh·∫≠n bi·∫øt: ch√¢n nh·∫•c l√™n, di chuy·ªÉn, ƒë·∫∑t xu·ªëng',
          'N·∫øu t√¢m tr√≠ lang thang, nh·∫π nh√†ng ƒë∆∞a v·ªÅ b∆∞·ªõc ch√¢n',
          'L·∫∑p l·∫°i 5-10 ph√∫t',
        ],
        stepsEn: [
          'Choose a short path (10-15 steps)',
          'Walk slowly, notice feet touching ground',
          'Notice: lifting, moving, placing foot',
          'If mind wanders, gently return to steps',
          'Repeat for 5-10 minutes',
        ],
        duration: 10,
        difficulty: 'BEGINNER',
        order: 2,
      },
    ],
  });

  await prisma.conceptQuestion.createMany({
    data: [
      {
        conceptId: presentMoment.id,
        question: 'B·∫°n ƒëang ·ªü ƒë√¢u trong ƒë·∫ßu ngay l√∫c n√†y: qu√° kh·ª©, t∆∞∆°ng lai, hay hi·ªán t·∫°i?',
        questionEn: 'Where is your mind right now: past, future, or present?',
        type: 'REFLECTIVE',
        order: 1,
      },
      {
        conceptId: presentMoment.id,
        question: 'ƒêi·ªÅu g√¨ s·∫Ω thay ƒë·ªïi n·∫øu b·∫°n d√†nh 100% s·ª± ch√∫ √Ω cho ng∆∞·ªùi ƒëang n√≥i chuy·ªán v·ªõi b·∫°n?',
        questionEn: 'What would change if you gave 100% attention to the person talking to you?',
        type: 'PROVOCATIVE',
        order: 2,
      },
    ],
  });

  // 2. Non-Judgmental Observation
  const nonJudgmental = await prisma.concept.upsert({
    where: { key: 'non_judgmental_observation' },
    update: {},
    create: {
      key: 'non_judgmental_observation',
      slug: 'non-judgmental-observation',
      title: 'Quan s√°t kh√¥ng ph√°n x√©t',
      titleEn: 'Non-Judgmental Observation',
      summary: 'Nh·∫≠n bi·∫øt suy nghƒ© v√† c·∫£m x√∫c m√† kh√¥ng g√°n nh√£n t·ªët/x·∫•u',
      summaryEn: 'Observe thoughts and feelings without labeling good/bad',
      description: `Quan s√°t kh√¥ng ph√°n x√©t l√† k·ªπ nƒÉng nh·∫≠n bi·∫øt suy nghƒ©, c·∫£m x√∫c v√† c·∫£m gi√°c c·ªßa m√¨nh m√† kh√¥ng g√°n cho ch√∫ng nh√£n "t·ªët" hay "x·∫•u", ch·ªâ ƒë∆°n gi·∫£n l√† quan s√°t ch√∫ng nh∆∞ l√†.

T·∫°i sao quan tr·ªçng:
- Ph√°n x√©t t·∫°o ra cƒÉng th·∫≥ng th√™m
- "T√¥i kh√¥ng n√™n c·∫£m th·∫•y bu·ªìn" ‚Üí l√†m bu·ªìn th√™m
- "Suy nghƒ© n√†y th·∫≠t ngu ng·ªëc" ‚Üí t·∫°o shame
- Quan s√°t kh√¥ng ph√°n x√©t cho ph√©p ch√∫ng ta x·ª≠ l√Ω c·∫£m x√∫c l√†nh m·∫°nh h∆°n

Thay v√¨:
‚ùå "T√¥i y·∫øu ƒëu·ªëi v√¨ lo l·∫Øng"
‚úÖ "T√¥i ƒëang tr·∫£i qua c·∫£m gi√°c lo l·∫Øng"

‚ùå "Suy nghƒ© n√†y sai l·∫ßm"
‚úÖ "ƒê√¢y l√† m·ªôt suy nghƒ© ƒëang xu·∫•t hi·ªán"

Khi quan s√°t kh√¥ng ph√°n x√©t, ch√∫ng ta t·∫°o kho·∫£ng kh√¥ng gian gi·ªØa m√¨nh v√† c·∫£m x√∫c, cho ph√©p ch·ªçn l·ª±a c√°ch ph·∫£n ·ª©ng thay v√¨ t·ª± ƒë·ªông ph·∫£n x·∫°.`,
      descriptionEn: `Non-judgmental observation is the skill of noticing thoughts, feelings, and sensations without labeling them as "good" or "bad", simply observing them as they are.

Why it matters:
- Judgment creates additional suffering
- "I shouldn't feel sad" ‚Üí makes sadness worse
- "This thought is stupid" ‚Üí creates shame
- Non-judgment allows healthier emotional processing

Instead of:
‚ùå "I'm weak for feeling anxious"
‚úÖ "I'm experiencing anxiety"

‚ùå "This thought is wrong"
‚úÖ "This is a thought arising"

With non-judgmental observation, we create space between ourselves and emotions, allowing choice in response rather than automatic reaction.`,
      categoryId: mindfulnessCategory!.id,
      tags: ['mindfulness', 'acceptance', 'awareness', 'emotions'],
      difficulty: 'INTERMEDIATE',
      aiContext: 'Use when user is being self-critical or judging emotions',
      keywords: ['judge', 'judgment', 'accept', 'observe', 'notice', 'aware'],
      source: 'Tara Brach - Radical Acceptance',
    },
  });

  await prisma.conceptPractice.createMany({
    data: [
      {
        conceptId: nonJudgmental.id,
        title: 'RAIN Technique',
        titleEn: 'RAIN Technique',
        description: 'Recognize, Allow, Investigate, Nurture - 4 b∆∞·ªõc x·ª≠ l√Ω c·∫£m x√∫c',
        descriptionEn: 'Recognize, Allow, Investigate, Nurture - 4 steps for emotions',
        steps: [
          'R (Recognize): "T√¥i ƒëang c·∫£m th·∫•y g√¨?"',
          'A (Allow): "ƒê∆∞·ª£c r·ªìi, c·∫£m gi√°c n√†y c√≥ m·∫∑t ·ªü ƒë√¢y"',
          'I (Investigate): "C·∫£m gi√°c n√†y ·ªü ƒë√¢u trong c∆° th·ªÉ?"',
          'N (Nurture): "T√¥i c√≥ th·ªÉ √¥m l·∫•y b·∫£n th√¢n v·ªõi l√≤ng t·ª´ bi"',
        ],
        stepsEn: [
          'R (Recognize): "What am I feeling?"',
          'A (Allow): "Okay, this feeling is here"',
          'I (Investigate): "Where is this in my body?"',
          'N (Nurture): "I can hold myself with compassion"',
        ],
        duration: 10,
        difficulty: 'INTERMEDIATE',
        order: 1,
      },
    ],
  });

  console.log('‚úÖ Added 2 Mindfulness concepts\n');

  // ========== GROWTH MINDSET CONCEPTS ==========
  console.log('üìñ Adding Growth Mindset concepts...');

  // 3. Embracing Challenges
  const embracingChallenges = await prisma.concept.upsert({
    where: { key: 'embracing_challenges' },
    update: {},
    create: {
      key: 'embracing_challenges',
      slug: 'embracing-challenges',
      title: 'ƒê√≥n nh·∫≠n th·ª≠ th√°ch',
      titleEn: 'Embracing Challenges',
      summary: 'Xem th·ª≠ th√°ch nh∆∞ c∆° h·ªôi ph√°t tri·ªÉn, kh√¥ng ph·∫£i m·ªëi ƒëe d·ªça',
      summaryEn: 'View challenges as growth opportunities, not threats',
      description: `ƒê√≥n nh·∫≠n th·ª≠ th√°ch l√† kh·∫£ nƒÉng nh√¨n nh·∫≠n kh√≥ khƒÉn v√† th·ª≠ th√°ch nh∆∞ c∆° h·ªôi ƒë·ªÉ h·ªçc h·ªèi v√† ph√°t tri·ªÉn, thay v√¨ n√© tr√°nh v√¨ s·ª£ th·∫•t b·∫°i.

Carol Dweck ph√°t hi·ªán r·∫±ng ng∆∞·ªùi c√≥ growth mindset:
- T√¨m ki·∫øm th·ª≠ th√°ch ƒë·ªÉ m·ªü r·ªông kh·∫£ nƒÉng
- Coi th·∫•t b·∫°i l√† feedback, kh√¥ng ph·∫£i ƒë·ªãnh nghƒ©a b·∫£n th√¢n
- H∆∞ng ph·∫•n khi ƒë·ªëi m·∫∑t v·ªõi ƒëi·ªÅu kh√≥ khƒÉn
- Hi·ªÉu r·∫±ng discomfort l√† d·∫•u hi·ªáu c·ªßa growth

Ng∆∞·ª£c l·∫°i, fixed mindset:
- Tr√°nh th·ª≠ th√°ch ƒë·ªÉ b·∫£o v·ªá ego
- Coi th·∫•t b·∫°i l√† b·∫±ng ch·ª©ng v·ªÅ gi·ªõi h·∫°n c·ªßa m√¨nh
- D·ªÖ b·ªè cu·ªôc khi g·∫∑p kh√≥ khƒÉn
- Th√≠ch ·ªü trong comfort zone

"N·∫øu b·∫°n kh√¥ng th·∫•t b·∫°i ƒë√¥i khi, b·∫°n ƒëang ch∆°i qu√° an to√†n" - Woody Allen

Th·ª≠ th√°ch gi√∫p ch√∫ng ta:
- Kh√°m ph√° kh·∫£ nƒÉng ti·ªÅm ·∫©n
- X√¢y d·ª±ng s·ª©c b·ªÅn t√¢m l√Ω
- H·ªçc ƒë∆∞·ª£c nhi·ªÅu h∆°n l√† khi m·ªçi th·ª© d·ªÖ d√†ng
- Ph√°t tri·ªÉn confidence th·∫≠t s·ª±`,
      descriptionEn: `Embracing challenges is the ability to see difficulties as opportunities to learn and grow, rather than avoiding them from fear of failure.

Carol Dweck found that people with growth mindset:
- Seek challenges to expand abilities
- See failure as feedback, not self-definition
- Get excited when facing difficult things
- Understand discomfort is a sign of growth

In contrast, fixed mindset:
- Avoid challenges to protect ego
- See failure as evidence of limitations
- Give up easily when facing difficulty
- Prefer to stay in comfort zone

"If you're not failing every now and again, it's a sign you're playing it too safe" - Woody Allen

Challenges help us:
- Discover hidden potential
- Build mental resilience
- Learn more than when things are easy
- Develop genuine confidence`,
      categoryId: growthMindsetCategory!.id,
      tags: ['growth', 'challenge', 'courage', 'resilience'],
      difficulty: 'INTERMEDIATE',
      aiContext: 'Use when user is avoiding something difficult or expressing fear',
      keywords: ['challenge', 'difficult', 'hard', 'fear', 'avoid', 'scary'],
      source: 'Carol Dweck - Mindset',
    },
  });

  await prisma.conceptPractice.createMany({
    data: [
      {
        conceptId: embracingChallenges.id,
        title: 'Challenge Journal',
        titleEn: 'Challenge Journal',
        description: 'Ghi l·∫°i challenges v√† b√†i h·ªçc t·ª´ m·ªói tu·∫ßn',
        descriptionEn: 'Record challenges and lessons from each week',
        steps: [
          'M·ªói tu·∫ßn, ch·ªçn 1 ƒëi·ªÅu b·∫°n ƒëang tr√°nh n√©',
          'Vi·∫øt: "T√¥i s·ª£ ƒëi·ªÅu g√¨ v·ªÅ challenge n√†y?"',
          'Vi·∫øt: "N·∫øu th√†nh c√¥ng, t√¥i s·∫Ω h·ªçc ƒë∆∞·ª£c g√¨?"',
          'Commit l√†m m·ªôt b∆∞·ªõc nh·ªè',
          'Cu·ªëi tu·∫ßn, review: "T√¥i ƒë√£ h·ªçc ƒë∆∞·ª£c g√¨?"',
        ],
        stepsEn: [
          'Each week, choose 1 thing you\'re avoiding',
          'Write: "What am I afraid of about this challenge?"',
          'Write: "If I succeed, what will I learn?"',
          'Commit to one small step',
          'End of week, review: "What did I learn?"',
        ],
        duration: 15,
        difficulty: 'INTERMEDIATE',
        order: 1,
      },
    ],
  });

  await prisma.conceptQuestion.createMany({
    data: [
      {
        conceptId: embracingChallenges.id,
        question: 'ƒêi·ªÅu g√¨ b·∫°n ƒëang tr√°nh n√© v√¨ s·ª£ th·∫•t b·∫°i?',
        questionEn: 'What are you avoiding because you fear failure?',
        type: 'PROVOCATIVE',
        order: 1,
      },
      {
        conceptId: embracingChallenges.id,
        question: 'L·∫ßn cu·ªëi c√πng b·∫°n l√†m ƒëi·ªÅu khi·∫øn b·∫°n s·ª£, b·∫°n ƒë√£ h·ªçc ƒë∆∞·ª£c g√¨?',
        questionEn: 'Last time you did something that scared you, what did you learn?',
        type: 'REFLECTIVE',
        order: 2,
      },
      {
        conceptId: embracingChallenges.id,
        question: 'Challenge nh·ªè n√†o b·∫°n c√≥ th·ªÉ th·ª≠ trong tu·∫ßn n√†y?',
        questionEn: 'What small challenge can you try this week?',
        type: 'ACTION_ORIENTED',
        order: 3,
      },
    ],
  });

  console.log('‚úÖ Added 1 Growth Mindset concept\n');

  // ========== EMOTIONAL INTELLIGENCE CONCEPTS ==========
  console.log('üìñ Adding Emotional Intelligence concepts...');

  // 4. Self-Awareness
  const selfAwareness = await prisma.concept.upsert({
    where: { key: 'self_awareness' },
    update: {},
    create: {
      key: 'self_awareness',
      slug: 'self-awareness',
      title: 'T·ª± nh·∫≠n th·ª©c',
      titleEn: 'Self-Awareness',
      summary: 'Hi·ªÉu r√µ c·∫£m x√∫c, suy nghƒ©, gi√° tr·ªã v√† ƒë·ªông l·ª±c c·ªßa b·∫£n th√¢n',
      summaryEn: 'Understanding your emotions, thoughts, values, and motivations',
      description: `T·ª± nh·∫≠n th·ª©c l√† n·ªÅn t·∫£ng c·ªßa tr√≠ tu·ªá c·∫£m x√∫c - kh·∫£ nƒÉng nh·∫≠n bi·∫øt v√† hi·ªÉu c·∫£m x√∫c, suy nghƒ©, gi√° tr·ªã v√† c√°ch ch√∫ng ·∫£nh h∆∞·ªüng ƒë·∫øn h√†nh vi c·ªßa m√¨nh.

Daniel Goleman ƒë·ªãnh nghƒ©a self-awareness c√≥ 3 kh√≠a c·∫°nh:
1. **Emotional Awareness**: Nh·∫≠n bi·∫øt c·∫£m x√∫c khi ch√∫ng xu·∫•t hi·ªán
2. **Accurate Self-Assessment**: Hi·ªÉu ƒëi·ªÉm m·∫°nh v√† h·∫°n ch·∫ø
3. **Self-Confidence**: Tin t∆∞·ªüng v√†o gi√° tr·ªã v√† kh·∫£ nƒÉng c·ªßa m√¨nh

Ng∆∞·ªùi c√≥ self-awareness cao:
- Nh·∫≠n bi·∫øt triggers (nh·ªØng g√¨ k√≠ch ho·∫°t c·∫£m x√∫c)
- Hi·ªÉu pattern h√†nh vi c·ªßa m√¨nh
- Bi·∫øt gi√° tr·ªã v√† m·ª•c ti√™u th·∫≠t s·ª±
- C√≥ th·ªÉ t·ª± ƒëi·ªÅu ch·ªânh ph·∫£n ·ª©ng

Thi·∫øu self-awareness d·∫´n ƒë·∫øn:
- Reactive thay v√¨ responsive
- Kh√¥ng hi·ªÉu t·∫°i sao m√¨nh h√†nh x·ª≠ nh∆∞ v·∫≠y
- Kh√≥ ki·ªÉm so√°t c·∫£m x√∫c
- Relationships k√©m hi·ªáu qu·∫£

"Bi·∫øt ng∆∞·ªùi bi·∫øt ta, trƒÉm tr·∫≠n trƒÉm th·∫Øng" - T√¥n T·ª≠`,
      descriptionEn: `Self-awareness is the foundation of emotional intelligence - the ability to recognize and understand your emotions, thoughts, values, and how they influence behavior.

Daniel Goleman defines self-awareness with 3 aspects:
1. **Emotional Awareness**: Recognizing emotions as they arise
2. **Accurate Self-Assessment**: Understanding strengths and limitations
3. **Self-Confidence**: Trusting your worth and capabilities

People with high self-awareness:
- Recognize triggers (what activates emotions)
- Understand their behavior patterns
- Know their true values and goals
- Can self-regulate responses

Lack of self-awareness leads to:
- Being reactive rather than responsive
- Not understanding why you act certain ways
- Difficulty controlling emotions
- Ineffective relationships

"Know yourself and know your enemy, you will win every battle" - Sun Tzu`,
      categoryId: emotionalIntelligenceCategory!.id,
      tags: ['self-awareness', 'emotions', 'introspection', 'eq'],
      difficulty: 'INTERMEDIATE',
      aiContext: 'Use when user seems unaware of their emotional patterns',
      keywords: ['self', 'aware', 'emotion', 'feel', 'understand', 'why'],
      source: 'Daniel Goleman - Emotional Intelligence',
    },
  });

  await prisma.conceptPractice.createMany({
    data: [
      {
        conceptId: selfAwareness.id,
        title: 'Emotion Naming',
        titleEn: 'Emotion Naming',
        description: 'ƒê·∫∑t t√™n c·ª• th·ªÉ cho c·∫£m x√∫c thay v√¨ "t·ªët/x·∫•u"',
        descriptionEn: 'Name emotions specifically instead of "good/bad"',
        steps: [
          'D·ª´ng l·∫°i khi c·∫£m th·∫•y c·∫£m x√∫c m·∫°nh',
          'H·ªèi: "M√¨nh ƒëang c·∫£m th·∫•y g√¨ CH√çNH X√ÅC?"',
          'D√πng t·ª´ c·ª• th·ªÉ: lo l·∫Øng/s·ª£ h√£i/b·ª±c b·ªôi/th·∫•t v·ªçng/h·∫°nh ph√∫c/h√†i l√≤ng',
          'ƒê√°nh gi√° intensity: 1-10',
          'Ghi ch√©p: "T√¥i c·∫£m th·∫•y [c·∫£m x√∫c] ·ªü m·ª©c [s·ªë]"',
        ],
        stepsEn: [
          'Pause when feeling strong emotion',
          'Ask: "What EXACTLY am I feeling?"',
          'Use specific words: anxious/scared/frustrated/disappointed/happy/content',
          'Rate intensity: 1-10',
          'Note: "I feel [emotion] at level [number]"',
        ],
        duration: 5,
        difficulty: 'BEGINNER',
        order: 1,
      },
      {
        conceptId: selfAwareness.id,
        title: 'Values Clarification',
        titleEn: 'Values Clarification',
        description: 'X√°c ƒë·ªãnh 5 gi√° tr·ªã c·ªët l√µi c·ªßa b·∫°n',
        descriptionEn: 'Identify your 5 core values',
        steps: [
          'List 20 gi√° tr·ªã quan tr·ªçng (gia ƒë√¨nh, t·ª± do, s√°ng t·∫°o, v.v.)',
          'Ch·ªçn 10 quan tr·ªçng nh·∫•t',
          'Ch·ªçn 5 KH√îNG TH·ªÇ THI·∫æU',
          'V·ªõi m·ªói value: "T·∫°i sao ƒëi·ªÅu n√†y quan tr·ªçng?"',
          'Ki·ªÉm tra: "Cu·ªôc s·ªëng hi·ªán t·∫°i c√≥ align v·ªõi values kh√¥ng?"',
        ],
        stepsEn: [
          'List 20 important values (family, freedom, creativity, etc.)',
          'Choose 10 most important',
          'Choose 5 ESSENTIAL ones',
          'For each value: "Why does this matter?"',
          'Check: "Does current life align with values?"',
        ],
        duration: 30,
        difficulty: 'INTERMEDIATE',
        order: 2,
      },
    ],
  });

  await prisma.conceptQuestion.createMany({
    data: [
      {
        conceptId: selfAwareness.id,
        question: 'C·∫£m x√∫c n√†o b·∫°n th∆∞·ªùng xuy√™n tr·∫£i qua nh·∫•t trong tu·∫ßn qua?',
        questionEn: 'What emotion did you experience most frequently this week?',
        type: 'REFLECTIVE',
        order: 1,
      },
      {
        conceptId: selfAwareness.id,
        question: 'ƒêi·ªÅu g√¨ trigger (k√≠ch ho·∫°t) c·∫£m x√∫c ti√™u c·ª±c c·ªßa b·∫°n?',
        questionEn: 'What triggers your negative emotions?',
        type: 'EXPLORATORY',
        order: 2,
      },
    ],
  });

  // 5. Empathy
  const empathy = await prisma.concept.upsert({
    where: { key: 'empathy' },
    update: {},
    create: {
      key: 'empathy',
      slug: 'empathy',
      title: 'ƒê·ªìng c·∫£m',
      titleEn: 'Empathy',
      summary: 'Hi·ªÉu v√† c·∫£m nh·∫≠n c·∫£m x√∫c c·ªßa ng∆∞·ªùi kh√°c',
      summaryEn: 'Understanding and feeling others\' emotions',
      description: `Empathy l√† kh·∫£ nƒÉng ƒë·∫∑t m√¨nh v√†o v·ªã tr√≠ c·ªßa ng∆∞·ªùi kh√°c, hi·ªÉu v√† c·∫£m nh·∫≠n nh·ªØng g√¨ h·ªç ƒëang tr·∫£i qua.

Bren√© Brown ph√¢n bi·ªát:
- **Empathy**: "T√¥i hi·ªÉu b·∫°n c·∫£m th·∫•y th·∫ø n√†o v√† t√¥i ·ªü ƒë√¢y v·ªõi b·∫°n"
- **Sympathy**: "T√¥i th∆∞∆°ng b·∫°n" (t·ª´ xa, kh√¥ng k·∫øt n·ªëi s√¢u)

3 lo·∫°i empathy:
1. **Cognitive Empathy**: Hi·ªÉu perspective c·ªßa ng∆∞·ªùi kh√°c
2. **Emotional Empathy**: C·∫£m nh·∫≠n c√πng c·∫£m x√∫c
3. **Compassionate Empathy**: Hi·ªÉu + C·∫£m nh·∫≠n + H√†nh ƒë·ªông gi√∫p ƒë·ª°

Empathy gi√∫p:
- X√¢y d·ª±ng m·ªëi quan h·ªá s√¢u s·∫Øc
- Gi·∫£i quy·∫øt conflict hi·ªáu qu·∫£
- L√£nh ƒë·∫°o t·ªët h∆°n
- T·∫°o m√¥i tr∆∞·ªùng an to√†n t√¢m l√Ω

C·∫£n tr·ªü empathy:
- Judgment v√† assumptions
- B·∫≠n r·ªôn qu√°, kh√¥ng l·∫Øng nghe
- Defensive (t·ª± v·ªá)
- Mu·ªën "fix" thay v√¨ "be with"

"Empathy is seeing with the eyes of another, listening with the ears of another, and feeling with the heart of another" - Alfred Adler`,
      descriptionEn: `Empathy is the ability to put yourself in someone else's position, understand and feel what they're experiencing.

Bren√© Brown distinguishes:
- **Empathy**: "I understand how you feel and I'm here with you"
- **Sympathy**: "I feel sorry for you" (from distance, no deep connection)

3 types of empathy:
1. **Cognitive Empathy**: Understanding others' perspective
2. **Emotional Empathy**: Feeling the same emotions
3. **Compassionate Empathy**: Understand + Feel + Act to help

Empathy helps:
- Build deep relationships
- Resolve conflicts effectively
- Lead better
- Create psychological safety

Barriers to empathy:
- Judgment and assumptions
- Too busy, not listening
- Being defensive
- Wanting to "fix" instead of "be with"

"Empathy is seeing with the eyes of another, listening with the ears of another, and feeling with the heart of another" - Alfred Adler`,
      categoryId: emotionalIntelligenceCategory!.id,
      tags: ['empathy', 'compassion', 'relationships', 'listening'],
      difficulty: 'INTERMEDIATE',
      aiContext: 'Use when user has relationship conflicts or misunderstandings',
      keywords: ['empathy', 'understand', 'feel', 'other', 'perspective', 'listen'],
      source: 'Bren√© Brown - Dare to Lead',
    },
  });

  await prisma.conceptPractice.createMany({
    data: [
      {
        conceptId: empathy.id,
        title: 'Active Listening',
        titleEn: 'Active Listening',
        description: 'L·∫Øng nghe ƒë·ªÉ hi·ªÉu, kh√¥ng ƒë·ªÉ ph·∫£n h·ªìi',
        descriptionEn: 'Listen to understand, not to respond',
        steps: [
          'Khi ai ƒë√≥ n√≥i, t·∫≠p trung 100%',
          'Kh√¥ng chu·∫©n b·ªã c√¢u tr·∫£ l·ªùi trong ƒë·∫ßu',
          'Quan s√°t: ng√¥n ng·ªØ c∆° th·ªÉ, gi·ªçng ƒëi·ªáu',
          'Reflect back: "B·∫°n ƒëang c·∫£m th·∫•y... v√¨..."',
          'H·ªèi: "B·∫°n c·∫ßn g√¨ t·ª´ m√¨nh?"',
        ],
        stepsEn: [
          'When someone speaks, focus 100%',
          'Don\'t prepare response in mind',
          'Observe: body language, tone',
          'Reflect back: "You\'re feeling... because..."',
          'Ask: "What do you need from me?"',
        ],
        duration: 10,
        difficulty: 'INTERMEDIATE',
        order: 1,
      },
      {
        conceptId: empathy.id,
        title: 'Perspective Taking',
        titleEn: 'Perspective Taking',
        description: 'Th·ª±c h√†nh nh√¨n t·ª´ g√≥c ƒë·ªô ng∆∞·ªùi kh√°c',
        descriptionEn: 'Practice seeing from others\' viewpoint',
        steps: [
          'Ch·ªçn m·ªôt conflict/disagreement',
          'Vi·∫øt: "Quan ƒëi·ªÉm c·ªßa t√¥i: ..."',
          'Vi·∫øt: "N·∫øu t√¥i l√† ng∆∞·ªùi kia, t√¥i c√≥ th·ªÉ c·∫£m th·∫•y..."',
          'Vi·∫øt: "ƒêi·ªÅu g√¨ c√≥ th·ªÉ l√† valid trong quan ƒëi·ªÉm c·ªßa h·ªç?"',
          'H·ªèi h·ªç: "T√¥i hi·ªÉu ƒë√∫ng kh√¥ng khi..."',
        ],
        stepsEn: [
          'Choose a conflict/disagreement',
          'Write: "My perspective: ..."',
          'Write: "If I were them, I might feel..."',
          'Write: "What could be valid in their view?"',
          'Ask them: "Am I understanding correctly that..."',
        ],
        duration: 15,
        difficulty: 'INTERMEDIATE',
        order: 2,
      },
    ],
  });

  await prisma.conceptQuestion.createMany({
    data: [
      {
        conceptId: empathy.id,
        question: 'L·∫ßn cu·ªëi c√πng b·∫°n th·ª±c s·ª± l·∫Øng nghe ai ƒë√≥ m√† kh√¥ng suy nghƒ© v·ªÅ ph·∫£n h·ªìi l√† khi n√†o?',
        questionEn: 'When was the last time you truly listened to someone without thinking about your response?',
        type: 'REFLECTIVE',
        order: 1,
      },
      {
        conceptId: empathy.id,
        question: 'Trong conflict g·∫ßn ƒë√¢y, b·∫°n ƒë√£ c·ªë g·∫Øng hi·ªÉu perspective c·ªßa ng∆∞·ªùi kia ch∆∞a?',
        questionEn: 'In a recent conflict, did you try to understand the other person\'s perspective?',
        type: 'PROVOCATIVE',
        order: 2,
      },
    ],
  });

  console.log('‚úÖ Added 2 Emotional Intelligence concepts\n');

  // ========== PRODUCTIVITY CONCEPTS ==========
  console.log('üìñ Adding Productivity concepts...');

  // 6. Deep Work
  const deepWork = await prisma.concept.upsert({
    where: { key: 'deep_work' },
    update: {},
    create: {
      key: 'deep_work',
      slug: 'deep-work',
      title: 'L√†m vi·ªác s√¢u',
      titleEn: 'Deep Work',
      summary: 'T·∫≠p trung cao ƒë·ªô v√†o c√¥ng vi·ªác c√≥ gi√° tr·ªã m√† kh√¥ng b·ªã ph√¢n t√¢m',
      summaryEn: 'Intense focus on valuable work without distraction',
      description: `Deep Work l√† kh·∫£ nƒÉng t·∫≠p trung kh√¥ng b·ªã ph√¢n t√¢m v√†o nhi·ªám v·ª• ƒë√≤i h·ªèi nh·∫≠n th·ª©c cao, t·∫°o ra gi√° tr·ªã l·ªõn v√† kh√≥ b·ªã thay th·∫ø.

Cal Newport ƒë·ªãnh nghƒ©a:
"Deep Work l√† c√°c ho·∫°t ƒë·ªông chuy√™n m√¥n ƒë∆∞·ª£c th·ª±c hi·ªán trong tr·∫°ng th√°i t·∫≠p trung kh√¥ng b·ªã ph√¢n t√¢m, ƒë·∫©y kh·∫£ nƒÉng nh·∫≠n th·ª©c c·ªßa b·∫°n ƒë·∫øn gi·ªõi h·∫°n. Nh·ªØng n·ªó l·ª±c n√†y t·∫°o ra gi√° tr·ªã m·ªõi, c·∫£i thi·ªán k·ªπ nƒÉng v√† kh√≥ b·ªã nh√¢n b·∫£n."

Ng∆∞·ª£c l·∫°i l√† Shallow Work:
- Email, meetings, admin tasks
- C√≥ th·ªÉ l√†m khi b·ªã ph√¢n t√¢m
- Kh√¥ng t·∫°o gi√° tr·ªã m·ªõi nhi·ªÅu
- D·ªÖ b·ªã thay th·∫ø

T·∫°i sao Deep Work quan tr·ªçng:
- Trong economy hi·ªán ƒë·∫°i, ng∆∞·ªùi th√†nh th·∫°o k·ªπ nƒÉng ph·ª©c t·∫°p c√≥ l·ª£i th·∫ø l·ªõn
- AI v√† automation thay th·∫ø shallow work
- Deep work t·∫°o breakthrough v√† innovation
- C·∫£i thi·ªán k·ªπ nƒÉng nhanh ch√≥ng

4 quy t·∫Øc Deep Work:
1. Work Deeply - T·∫°o rituals v√† routines
2. Embrace Boredom - Luy·ªán t·∫≠p concentration
3. Quit Social Media - Gi·∫£m distraction
4. Drain the Shallows - Minimize shallow work`,
      descriptionEn: `Deep Work is the ability to focus without distraction on cognitively demanding tasks, creating significant value and being hard to replicate.

Cal Newport defines:
"Deep Work is professional activities performed in a state of distraction-free concentration that push your cognitive capabilities to their limit. These efforts create new value, improve your skill, and are hard to replicate."

Opposite is Shallow Work:
- Email, meetings, admin tasks
- Can be done while distracted
- Doesn't create much new value
- Easily replaceable

Why Deep Work matters:
- In modern economy, those who master complex skills have huge advantages
- AI and automation replace shallow work
- Deep work creates breakthroughs and innovation
- Improves skills rapidly

4 Rules of Deep Work:
1. Work Deeply - Create rituals and routines
2. Embrace Boredom - Train concentration
3. Quit Social Media - Reduce distraction
4. Drain the Shallows - Minimize shallow work`,
      categoryId: productivityCategory.id,
      tags: ['productivity', 'focus', 'concentration', 'flow'],
      difficulty: 'INTERMEDIATE',
      aiContext: 'Use when user struggles with focus or feels unproductive',
      keywords: ['focus', 'concentrate', 'distract', 'productive', 'work', 'deep'],
      source: 'Cal Newport - Deep Work',
    },
  });

  await prisma.conceptPractice.createMany({
    data: [
      {
        conceptId: deepWork.id,
        title: 'Deep Work Block',
        titleEn: 'Deep Work Block',
        description: 'T·∫°o block 90-120 ph√∫t deep work m·ªói ng√†y',
        descriptionEn: 'Create 90-120 minute deep work blocks daily',
        steps: [
          'Ch·ªçn th·ªùi gian nƒÉng l∆∞·ª£ng cao nh·∫•t (th∆∞·ªùng bu·ªïi s√°ng)',
          'Block calendar, th√¥ng b√°o ƒë·ªìng nghi·ªáp',
          'T·∫Øt t·∫•t c·∫£ notifications (phone, email, chat)',
          'Ch·ªçn 1 nhi·ªám v·ª• quan tr·ªçng duy nh·∫•t',
          'Set timer 90 ph√∫t, l√†m vi·ªác chuy√™n s√¢u',
          'Break 15 ph√∫t sau m·ªói block',
        ],
        stepsEn: [
          'Choose highest energy time (usually morning)',
          'Block calendar, notify colleagues',
          'Turn off all notifications (phone, email, chat)',
          'Choose ONE important task',
          'Set timer 90 minutes, work intensely',
          '15 minute break after each block',
        ],
        duration: 90,
        difficulty: 'INTERMEDIATE',
        order: 1,
      },
    ],
  });

  await prisma.conceptQuestion.createMany({
    data: [
      {
        conceptId: deepWork.id,
        question: 'Khi n√†o b·∫°n t·∫≠p trung t·ªët nh·∫•t trong ng√†y?',
        questionEn: 'When do you focus best during the day?',
        type: 'EXPLORATORY',
        order: 1,
      },
      {
        conceptId: deepWork.id,
        question: 'B·∫°n ƒëang d√†nh bao nhi√™u % th·ªùi gian cho deep work vs shallow work?',
        questionEn: 'What % of your time is deep work vs shallow work?',
        type: 'REFLECTIVE',
        order: 2,
      },
    ],
  });

  console.log('‚úÖ Added 1 Productivity concept\n');

  // ========== RELATIONSHIPS CONCEPTS ==========
  console.log('üìñ Adding Relationships concepts...');

  // 7. Healthy Boundaries
  const boundaries = await prisma.concept.upsert({
    where: { key: 'healthy_boundaries' },
    update: {},
    create: {
      key: 'healthy_boundaries',
      slug: 'healthy-boundaries',
      title: 'Ranh gi·ªõi l√†nh m·∫°nh',
      titleEn: 'Healthy Boundaries',
      summary: 'Thi·∫øt l·∫≠p v√† duy tr√¨ gi·ªõi h·∫°n r√µ r√†ng trong m·ªëi quan h·ªá',
      summaryEn: 'Establishing and maintaining clear limits in relationships',
      description: `Ranh gi·ªõi l√†nh m·∫°nh l√† vi·ªác thi·∫øt l·∫≠p c√°c gi·ªõi h·∫°n r√µ r√†ng v·ªÅ nh·ªØng g√¨ b·∫°n ch·∫•p nh·∫≠n v√† kh√¥ng ch·∫•p nh·∫≠n trong m·ªëi quan h·ªá, b·∫£o v·ªá th·ªùi gian, nƒÉng l∆∞·ª£ng v√† gi√° tr·ªã c·ªßa b·∫°n.

Bren√© Brown n√≥i:
"Ranh gi·ªõi ch√≠nh l√† nh·ªØng g√¨ ƒë∆∞·ª£c ph√©p v√† kh√¥ng ƒë∆∞·ª£c ph√©p."

C√°c lo·∫°i ranh gi·ªõi:
1. **Physical**: Kh√¥ng gian c√° nh√¢n, ch·∫°m ch·∫°m
2. **Emotional**: Chia s·∫ª c·∫£m x√∫c, intimacy
3. **Time**: ∆Øu ti√™n th·ªùi gian cho b·∫£n th√¢n/ng∆∞·ªùi kh√°c
4. **Mental**: T√¥n tr·ªçng suy nghƒ©, √Ω ki·∫øn
5. **Material**: Ti·ªÅn b·∫°c, t√†i s·∫£n

D·∫•u hi·ªáu ranh gi·ªõi k√©m:
- N√≥i "yes" khi mu·ªën n√≥i "no"
- C·∫£m th·∫•y b·ªã l·ª£i d·ª•ng
- Burnout v√¨ qu√° m·ª©c cam k·∫øt
- Resentment (o√°n gi·∫≠n) v·ªõi ng∆∞·ªùi kh√°c
- M·∫•t b·∫£n s·∫Øc trong m·ªëi quan h·ªá

Ranh gi·ªõi l√†nh m·∫°nh KH√îNG ph·∫£i:
‚ùå √çch k·ª∑
‚ùå X√¢y t∆∞·ªùng ngƒÉn c√°ch
‚ùå Kh√¥ng quan t√¢m ng∆∞·ªùi kh√°c

Ranh gi·ªõi l√†nh m·∫°nh L√Ä:
‚úÖ T·ª± chƒÉm s√≥c b·∫£n th√¢n
‚úÖ R√µ r√†ng v·ªÅ needs v√† limits
‚úÖ T√¥n tr·ªçng b·∫£n th√¢n v√† ng∆∞·ªùi kh√°c`,
      descriptionEn: `Healthy boundaries are establishing clear limits about what you accept and don't accept in relationships, protecting your time, energy, and values.

Bren√© Brown says:
"Boundaries are what's okay and what's not okay."

Types of boundaries:
1. **Physical**: Personal space, touch
2. **Emotional**: Sharing feelings, intimacy
3. **Time**: Prioritizing time for self/others
4. **Mental**: Respecting thoughts, opinions
5. **Material**: Money, possessions

Signs of poor boundaries:
- Saying "yes" when you want to say "no"
- Feeling taken advantage of
- Burnout from over-committing
- Resentment toward others
- Losing self in relationships

Healthy boundaries are NOT:
‚ùå Selfish
‚ùå Building walls
‚ùå Not caring about others

Healthy boundaries ARE:
‚úÖ Self-care
‚úÖ Clear about needs and limits
‚úÖ Respecting self and others`,
      categoryId: relationshipsCategory.id,
      tags: ['boundaries', 'relationships', 'self-care', 'assertiveness'],
      difficulty: 'INTERMEDIATE',
      aiContext: 'Use when user feels overwhelmed, taken advantage of, or unable to say no',
      keywords: ['boundary', 'no', 'limit', 'overwhelm', 'people-pleasing', 'yes'],
      source: 'Bren√© Brown - Atlas of the Heart',
    },
  });

  await prisma.conceptPractice.createMany({
    data: [
      {
        conceptId: boundaries.id,
        title: 'Saying No Practice',
        titleEn: 'Saying No Practice',
        description: 'Luy·ªán t·∫≠p n√≥i "kh√¥ng" m·ªôt c√°ch l·ªãch s·ª± nh∆∞ng firm',
        descriptionEn: 'Practice saying "no" politely but firmly',
        steps: [
          'Nh·∫≠n di·ªán khi b·∫°n mu·ªën n√≥i no nh∆∞ng s·∫Øp n√≥i yes',
          'D√πng template: "C·∫£m ∆°n ƒë√£ nghƒ© ƒë·∫øn m√¨nh, nh∆∞ng..."',
          'Kh√¥ng c·∫ßn gi·∫£i th√≠ch d√†i d√≤ng',
          'Alternatives: "ƒê·ªÉ m√¨nh ki·ªÉm tra l·ªãch v√† tr·∫£ l·ªùi sau"',
          'Practice v·ªõi ng∆∞·ªùi an to√†n tr∆∞·ªõc',
        ],
        stepsEn: [
          'Notice when you want to say no but about to say yes',
          'Use template: "Thanks for thinking of me, but..."',
          'Don\'t over-explain',
          'Alternatives: "Let me check my calendar and get back"',
          'Practice with safe person first',
        ],
        duration: 10,
        difficulty: 'INTERMEDIATE',
        order: 1,
      },
    ],
  });

  await prisma.conceptQuestion.createMany({
    data: [
      {
        conceptId: boundaries.id,
        question: 'B·∫°n ƒëang n√≥i "yes" v√¨ mu·ªën hay v√¨ c·∫£m th·∫•y ph·∫£i l√†m?',
        questionEn: 'Are you saying "yes" because you want to or feel you have to?',
        type: 'PROVOCATIVE',
        order: 1,
      },
      {
        conceptId: boundaries.id,
        question: 'Ranh gi·ªõi n√†o b·∫°n c·∫ßn thi·∫øt l·∫≠p trong m·ªëi quan h·ªá hi·ªán t·∫°i?',
        questionEn: 'What boundary do you need to set in your current relationships?',
        type: 'ACTION_ORIENTED',
        order: 2,
      },
    ],
  });

  console.log('‚úÖ Added 1 Relationships concept\n');

  // ========== RESILIENCE CONCEPTS ==========
  console.log('üìñ Adding Resilience concepts...');

  // 8. Stress Management
  const stressManagement = await prisma.concept.upsert({
    where: { key: 'stress_management' },
    update: {},
    create: {
      key: 'stress_management',
      slug: 'stress-management',
      title: 'Qu·∫£n l√Ω cƒÉng th·∫≥ng',
      titleEn: 'Stress Management',
      summary: 'K·ªπ thu·∫≠t gi·∫£m v√† ki·ªÉm so√°t stress hi·ªáu qu·∫£',
      summaryEn: 'Techniques to reduce and control stress effectively',
      description: `Qu·∫£n l√Ω cƒÉng th·∫≥ng l√† kh·∫£ nƒÉng nh·∫≠n di·ªán, gi·∫£m thi·ªÉu v√† ph·∫£n ·ª©ng l√†nh m·∫°nh v·ªõi stress, thay v√¨ ƒë·ªÉ stress ki·ªÉm so√°t cu·ªôc s·ªëng.

Stress kh√¥ng ph·∫£i l√∫c n√†o c≈©ng x·∫•u:
- **Eustress**: Stress t√≠ch c·ª±c (challenge, excitement)
- **Distress**: Stress ti√™u c·ª±c (chronic, overwhelming)

4 chi·∫øn l∆∞·ª£c qu·∫£n l√Ω stress:
1. **Problem-focused**: Gi·∫£i quy·∫øt nguy√™n nh√¢n
2. **Emotion-focused**: Qu·∫£n l√Ω ph·∫£n ·ª©ng c·∫£m x√∫c
3. **Meaning-focused**: T√¨m √Ω nghƒ©a trong kh√≥ khƒÉn
4. **Social support**: T√¨m ki·∫øm s·ª± h·ªó tr·ª£

D·∫•u hi·ªáu stress m√£n t√≠nh:
- M·ªát m·ªèi li√™n t·ª•c
- Kh√≥ ng·ªß
- Irritability (c√°u g·∫Øt)
- ƒêau ƒë·∫ßu, ƒëau c∆°
- Kh√≥ t·∫≠p trung
- Thay ƒë·ªïi appetite

K·ªπ thu·∫≠t evidence-based:
- Deep breathing (4-7-8)
- Progressive muscle relaxation
- Mindfulness meditation
- Physical exercise
- Social connection
- Time in nature

Quan tr·ªçng nh·∫•t: Stress l√† ph·∫£n ·ª©ng c·ªßa c∆° th·ªÉ v·ªõi threat. Khi thay ƒë·ªïi perception (nh·∫≠n th·ª©c), thay ƒë·ªïi response.`,
      descriptionEn: `Stress management is the ability to recognize, reduce, and respond healthily to stress, rather than letting stress control life.

Stress isn't always bad:
- **Eustress**: Positive stress (challenge, excitement)
- **Distress**: Negative stress (chronic, overwhelming)

4 stress management strategies:
1. **Problem-focused**: Address the cause
2. **Emotion-focused**: Manage emotional response
3. **Meaning-focused**: Find meaning in difficulty
4. **Social support**: Seek support

Signs of chronic stress:
- Constant fatigue
- Sleep problems
- Irritability
- Headaches, muscle pain
- Difficulty concentrating
- Appetite changes

Evidence-based techniques:
- Deep breathing (4-7-8)
- Progressive muscle relaxation
- Mindfulness meditation
- Physical exercise
- Social connection
- Time in nature

Most important: Stress is body's response to threat. When you change perception, you change response.`,
      categoryId: resilienceCategory!.id,
      tags: ['stress', 'anxiety', 'coping', 'wellness'],
      difficulty: 'BEGINNER',
      aiContext: 'Use when user expresses feeling overwhelmed or stressed',
      keywords: ['stress', 'anxious', 'overwhelm', 'pressure', 'worry', 'calm'],
      source: 'Kelly McGonigal - The Upside of Stress',
    },
  });

  await prisma.conceptPractice.createMany({
    data: [
      {
        conceptId: stressManagement.id,
        title: '4-7-8 Breathing',
        titleEn: '4-7-8 Breathing',
        description: 'K·ªπ thu·∫≠t th·ªü gi·∫£m stress t·ª©c th√¨',
        descriptionEn: 'Breathing technique for instant stress relief',
        steps: [
          'Th·ªü h·∫øt ra qua mi·ªáng',
          'Th·ªü v√†o qua m≈©i, ƒë·∫øm 4',
          'Gi·ªØ h∆°i, ƒë·∫øm 7',
          'Th·ªü ra qua mi·ªáng, ƒë·∫øm 8',
          'L·∫∑p l·∫°i 4 chu k·ª≥',
        ],
        stepsEn: [
          'Exhale completely through mouth',
          'Inhale through nose, count 4',
          'Hold breath, count 7',
          'Exhale through mouth, count 8',
          'Repeat 4 cycles',
        ],
        duration: 5,
        difficulty: 'BEGINNER',
        order: 1,
      },
      {
        conceptId: stressManagement.id,
        title: 'Stress Journal',
        titleEn: 'Stress Journal',
        description: 'Tracking stress triggers v√† patterns',
        descriptionEn: 'Tracking stress triggers and patterns',
        steps: [
          'M·ªói khi c·∫£m th·∫•y stress, ghi l·∫°i:',
          '1. T√¨nh hu·ªëng g√¨ x·∫£y ra?',
          '2. Suy nghƒ© g√¨ trong ƒë·∫ßu?',
          '3. C·∫£m x√∫c & c∆∞·ªùng ƒë·ªô (1-10)',
          '4. Ph·∫£n ·ª©ng c·ªßa b·∫°n?',
          'Sau 1 tu·∫ßn, t√¨m patterns',
        ],
        stepsEn: [
          'When feeling stressed, record:',
          '1. What situation happened?',
          '2. What thoughts?',
          '3. Emotions & intensity (1-10)',
          '4. Your response?',
          'After 1 week, find patterns',
        ],
        duration: 15,
        difficulty: 'BEGINNER',
        order: 2,
      },
    ],
  });

  await prisma.conceptQuestion.createMany({
    data: [
      {
        conceptId: stressManagement.id,
        question: 'Stress c·ªßa b·∫°n ƒë·∫øn t·ª´ ƒëi·ªÅu g√¨ b·∫°n c√≥ th·ªÉ ki·ªÉm so√°t hay kh√¥ng th·ªÉ ki·ªÉm so√°t?',
        questionEn: 'Is your stress from something you can control or cannot control?',
        type: 'EXPLORATORY',
        order: 1,
      },
      {
        conceptId: stressManagement.id,
        question: 'B·∫°n th∆∞·ªùng ph·∫£n ·ª©ng v·ªõi stress nh∆∞ th·∫ø n√†o? C√°ch ƒë√≥ c√≥ hi·ªáu qu·∫£ kh√¥ng?',
        questionEn: 'How do you typically respond to stress? Is it effective?',
        type: 'REFLECTIVE',
        order: 2,
      },
    ],
  });

  console.log('‚úÖ Added 1 Resilience concept\n');

  // Create relations between concepts
  console.log('üîó Creating concept relations...');

  await prisma.conceptRelation.createMany({
    data: [
      // Present Moment <-> Non-Judgmental
      { aId: presentMoment.id, bId: nonJudgmental.id, type: 'RELATED' },
      // Empathy <-> Self-Awareness
      { aId: empathy.id, bId: selfAwareness.id, type: 'RELATED' },
      // Deep Work <-> Embracing Challenges
      { aId: deepWork.id, bId: embracingChallenges.id, type: 'RELATED' },
      // Boundaries <-> Self-Awareness
      { aId: boundaries.id, bId: selfAwareness.id, type: 'RELATED' },
      // Stress Management <-> Present Moment
      { aId: stressManagement.id, bId: presentMoment.id, type: 'RELATED' },
    ],
    skipDuplicates: true,
  });

  console.log('‚úÖ Created concept relations\n');

  // Summary
  const conceptCount = await prisma.concept.count();
  const categoryCount = await prisma.conceptCategory.count();
  const practiceCount = await prisma.conceptPractice.count();
  const exampleCount = await prisma.conceptExample.count();
  const questionCount = await prisma.conceptQuestion.count();

  console.log('‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê');
  console.log('üìä Expansion Summary:');
  console.log('‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê');
  console.log(`   Categories:  ${categoryCount} (+2)`);
  console.log(`   Concepts:    ${conceptCount} (+8)`);
  console.log(`   Practices:   ${practiceCount} (+10)`);
  console.log(`   Examples:    ${exampleCount}`);
  console.log(`   Questions:   ${questionCount} (+13)`);
  console.log('‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê');
  console.log('\n‚úÖ Content expansion completed!\n');
}

expandConcepts()
  .catch((e) => {
    console.error('‚ùå Error expanding concepts:', e);
    process.exit(1);
  })
  .finally(async () => {
    await prisma.$disconnect();
  });
