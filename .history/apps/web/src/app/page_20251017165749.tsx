'use client';

import Link from 'next/link';
import { motion } from 'framer-motion';
import { 
  Sparkles, 
  Brain, 
  Target, 
  TrendingUp, 
  Users, 
  Shield,
  Zap,
  Heart,
  BookOpen,
  ArrowRight,
  CheckCircle2
} from 'lucide-react';
import { FeatureCard } from '@/components/landing/FeatureCard';
import { Stats } from '@/components/landing/Stats';

export default function HomePage() {
  const features = [
    {
      icon: Sparkles,
      title: 'Quick Capture',
      description: 'Ghi l·∫°i b√†i h·ªçc trong v√†i gi√¢y v·ªõi text ho·∫∑c voice input. AI s·∫Ω t·ª± ƒë·ªông ph√¢n t√≠ch v√† g·ª£i √Ω.',
      gradient: 'from-purple-500 to-pink-500',
    },
    {
      icon: Brain,
      title: 'AI Analysis',
      description: 'Nh·∫≠n insights s√¢u s·∫Øc, t√≥m t·∫Øt th√¥ng minh v√† c√¢u h·ªèi reflection t·ª´ AI coach c·ªßa b·∫°n.',
      gradient: 'from-blue-500 to-cyan-500',
    },
    {
      icon: Target,
      title: 'Goal Tracking',
      description: 'Theo d√µi ti·∫øn ƒë·ªô 10,000 b√†i h·ªçc v·ªõi h·ªá th·ªëng sprint, milestone v√† achievement badges.',
      gradient: 'from-orange-500 to-red-500',
    },
    {
      icon: TrendingUp,
      title: 'Analytics',
      description: 'Bi·ªÉu ƒë·ªì tr·ª±c quan, heatmap ho·∫°t ƒë·ªông, v√† insights v·ªÅ c√°c lƒ©nh v·ª±c ph√°t tri·ªÉn c·ªßa b·∫°n.',
      gradient: 'from-green-500 to-emerald-500',
    },
    {
      icon: Users,
      title: 'Community',
      description: 'Chia s·∫ª ·∫©n danh, h·ªçc h·ªèi t·ª´ ng∆∞·ªùi kh√°c, v√† tham gia challenges nh√≥m ƒë·ªÉ ƒë·ªông l·ª±c.',
      gradient: 'from-indigo-500 to-purple-500',
    },
    {
      icon: Shield,
      title: 'Privacy First',
      description: 'D·ªØ li·ªáu c·ªßa b·∫°n ho√†n to√†n ri√™ng t∆∞. Ch·ªçn chia s·∫ª theo link ho·∫∑c gi·ªØ k√≠n 100%.',
      gradient: 'from-gray-500 to-slate-500',
    },
  ];

  const stats = [
    { value: '10K', label: 'M·ª•c ti√™u b√†i h·ªçc' },
    { value: '100', label: 'B√†i/Sprint' },
    { value: 'AI', label: 'Ph√¢n t√≠ch th√¥ng minh' },
    { value: '‚àû', label: 'Kh√¥ng gi·ªõi h·∫°n' },
  ];

  const benefits = [
    'Ghi ch√©p nhanh ch√≥ng, kh√¥ng c·∫ßn suy nghƒ© nhi·ªÅu',
    'AI coach gi√∫p b·∫°n reflection s√¢u h∆°n',
    'Theo d√µi ti·∫øn ƒë·ªô v·ªõi gamification',
    'T·∫°o th√≥i quen h·ªçc t·∫≠p b·ªÅn v·ªØng',
    'Ph√°t tri·ªÉn ƒë·ªÅu ƒë·∫∑n qua 4 lƒ©nh v·ª±c',
    'C·ªông ƒë·ªìng h·ªó tr·ª£ v√† ƒë·ªông vi√™n',
  ];

  return (
    <div className="min-h-screen">
      {/* Hero Section */}
      <section className="relative overflow-hidden min-h-screen flex items-center">
        {/* Animated background gradients */}
        <div className="absolute inset-0 -z-10">
          <motion.div
            animate={{
              scale: [1, 1.2, 1],
              opacity: [0.3, 0.5, 0.3],
            }}
            transition={{
              duration: 8,
              repeat: Infinity,
              ease: 'easeInOut',
            }}
            className="absolute top-0 left-0 w-[500px] h-[500px] bg-gradient-to-br from-purple-500/30 to-pink-500/30 rounded-full blur-3xl"
          />
          <motion.div
            animate={{
              scale: [1.2, 1, 1.2],
              opacity: [0.3, 0.5, 0.3],
            }}
            transition={{
              duration: 8,
              repeat: Infinity,
              ease: 'easeInOut',
              delay: 1,
            }}
            className="absolute bottom-0 right-0 w-[600px] h-[600px] bg-gradient-to-br from-blue-500/30 to-cyan-500/30 rounded-full blur-3xl"
          />
          <motion.div
            animate={{
              scale: [1, 1.3, 1],
              opacity: [0.2, 0.4, 0.2],
            }}
            transition={{
              duration: 10,
              repeat: Infinity,
              ease: 'easeInOut',
              delay: 2,
            }}
            className="absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 w-[700px] h-[700px] bg-gradient-to-br from-orange-500/20 to-red-500/20 rounded-full blur-3xl"
          />
        </div>

        <div className="container mx-auto px-4 py-20 relative z-10">
          <div className="max-w-5xl mx-auto text-center">
            {/* Logo/Badge */}
            <motion.div
              initial={{ scale: 0, rotate: -180 }}
              animate={{ scale: 1, rotate: 0 }}
              transition={{ type: 'spring', stiffness: 200, delay: 0.2 }}
              className="inline-flex items-center gap-2 px-4 py-2 rounded-full glass-card mb-8"
            >
              <Sparkles className="text-purple-500" size={20} />
              <span className="text-sm font-medium">H√†nh tr√¨nh 10,000 b√†i h·ªçc</span>
            </motion.div>

            {/* Headline */}
            <motion.h1
              initial={{ opacity: 0, y: 30 }}
              animate={{ opacity: 1, y: 0 }}
              transition={{ delay: 0.3 }}
              className="text-5xl md:text-7xl font-bold mb-6 leading-tight"
            >
              <span className="bg-gradient-to-r from-purple-600 via-blue-600 to-pink-600 bg-clip-text text-transparent">
                Life Lessons
              </span>
              <br />
              <span className="text-3xl md:text-5xl">
                Ghi ch√©p ‚Ä¢ Ph√¢n t√≠ch ‚Ä¢ Th√†nh c√¥ng
              </span>
            </motion.h1>

            {/* Subtitle */}
            <motion.p
              initial={{ opacity: 0, y: 20 }}
              animate={{ opacity: 1, y: 0 }}
              transition={{ delay: 0.5 }}
              className="text-xl md:text-2xl text-muted-foreground mb-12 max-w-3xl mx-auto leading-relaxed"
            >
              Capture every insight, analyze with AI, and transform your life through
              <span className="text-purple-600 dark:text-purple-400 font-semibold"> 10,000 lessons </span>
              of continuous learning
            </motion.p>

            {/* CTA Buttons */}
            <motion.div
              initial={{ opacity: 0, y: 20 }}
              animate={{ opacity: 1, y: 0 }}
              transition={{ delay: 0.7 }}
              className="flex flex-col sm:flex-row gap-4 justify-center mb-16"
            >
              <Link href="/signup">
                <motion.button
                  whileHover={{ scale: 1.05 }}
                  whileTap={{ scale: 0.95 }}
                  className="btn-modern px-8 py-4 text-lg rounded-xl flex items-center gap-2 shadow-2xl"
                >
                  B·∫Øt ƒë·∫ßu mi·ªÖn ph√≠
                  <ArrowRight size={20} />
                </motion.button>
              </Link>
              <Link href="/login">
                <motion.button
                  whileHover={{ scale: 1.05 }}
                  whileTap={{ scale: 0.95 }}
                  className="px-8 py-4 text-lg rounded-xl border-2 border-border bg-background/50 backdrop-blur-sm hover:bg-background transition-all flex items-center gap-2"
                >
                  ƒê√£ c√≥ t√†i kho·∫£n
                </motion.button>
              </Link>
            </motion.div>

            {/* Stats */}
            <motion.div
              initial={{ opacity: 0, y: 30 }}
              animate={{ opacity: 1, y: 0 }}
              transition={{ delay: 0.9 }}
            >
              <Stats stats={stats} />
            </motion.div>
          </div>
        </div>

        {/* Scroll indicator */}
        <motion.div
          animate={{ y: [0, 10, 0] }}
          transition={{ duration: 2, repeat: Infinity }}
          className="absolute bottom-8 left-1/2 -translate-x-1/2"
        >
          <div className="w-6 h-10 border-2 border-border rounded-full flex justify-center pt-2">
            <motion.div
              animate={{ y: [0, 12, 0], opacity: [1, 0, 1] }}
              transition={{ duration: 2, repeat: Infinity }}
              className="w-1.5 h-1.5 bg-purple-500 rounded-full"
            />
          </div>
        </motion.div>
      </section>

      {/* Features Section */}
      <section className="py-20 relative">
        <div className="container mx-auto px-4">
          <motion.div
            initial={{ opacity: 0, y: 30 }}
            whileInView={{ opacity: 1, y: 0 }}
            viewport={{ once: true }}
            className="text-center mb-16"
          >
            <h2 className="text-4xl md:text-5xl font-bold mb-4">
              T√≠nh nƒÉng n·ªïi b·∫≠t ‚ú®
            </h2>
            <p className="text-xl text-muted-foreground max-w-2xl mx-auto">
              C√¥ng c·ª• ho√†n h·∫£o ƒë·ªÉ ghi nh·∫≠n, ph√¢n t√≠ch v√† h·ªçc h·ªèi t·ª´ m·ªçi tr·∫£i nghi·ªám
            </p>
          </motion.div>

          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8 max-w-7xl mx-auto">
            {features.map((feature, index) => (
              <FeatureCard key={feature.title} {...feature} index={index} />
            ))}
          </div>
        </div>
      </section>

      {/* How It Works */}
      <section className="py-20 bg-gradient-to-b from-background to-background/50">
        <div className="container mx-auto px-4">
          <motion.div
            initial={{ opacity: 0, y: 30 }}
            whileInView={{ opacity: 1, y: 0 }}
            viewport={{ once: true }}
            className="text-center mb-16"
          >
            <h2 className="text-4xl md:text-5xl font-bold mb-4">
              C√°ch ho·∫°t ƒë·ªông üöÄ
            </h2>
            <p className="text-xl text-muted-foreground max-w-2xl mx-auto">
              Ch·ªâ 3 b∆∞·ªõc ƒë∆°n gi·∫£n ƒë·ªÉ b·∫Øt ƒë·∫ßu h√†nh tr√¨nh 10,000 b√†i h·ªçc
            </p>
          </motion.div>

          <div className="max-w-4xl mx-auto space-y-8">
            {[
              {
                step: '1',
                title: 'Ghi ch√©p nhanh',
                description: 'M·ªü app, nh·∫≠p ho·∫∑c n√≥i b√†i h·ªçc c·ªßa b·∫°n. M·∫•t ch∆∞a ƒë·∫øn 30 gi√¢y!',
                icon: Zap,
              },
              {
                step: '2',
                title: 'AI ph√¢n t√≠ch',
                description: 'Nh·∫≠n t√≥m t·∫Øt, insights v√† c√¢u h·ªèi reflection t·ª´ AI coach.',
                icon: Brain,
              },
              {
                step: '3',
                title: 'Theo d√µi & Ph√°t tri·ªÉn',
                description: 'Xem ti·∫øn ƒë·ªô, ƒë·∫°t milestones, v√† h·ªçc h·ªèi t·ª´ patterns c·ªßa b·∫°n.',
                icon: TrendingUp,
              },
            ].map((item, index) => {
              const Icon = item.icon;
              return (
                <motion.div
                  key={item.step}
                  initial={{ opacity: 0, x: index % 2 === 0 ? -50 : 50 }}
                  whileInView={{ opacity: 1, x: 0 }}
                  viewport={{ once: true }}
                  transition={{ delay: index * 0.2 }}
                  className="flex items-start gap-6 glass-card p-8 rounded-2xl"
                >
                  <div className="flex-shrink-0 w-16 h-16 rounded-2xl bg-gradient-to-br from-purple-500 to-pink-500 flex items-center justify-center text-white text-2xl font-bold shadow-lg">
                    {item.step}
                  </div>
                  <div className="flex-1">
                    <div className="flex items-center gap-3 mb-3">
                      <Icon className="text-purple-500" size={28} />
                      <h3 className="text-2xl font-bold">{item.title}</h3>
                    </div>
                    <p className="text-muted-foreground text-lg">{item.description}</p>
                  </div>
                </motion.div>
              );
            })}
          </div>
        </div>
      </section>

      {/* Benefits */}
      <section className="py-20">
        <div className="container mx-auto px-4">
          <div className="max-w-4xl mx-auto">
            <motion.div
              initial={{ opacity: 0, y: 30 }}
              whileInView={{ opacity: 1, y: 0 }}
              viewport={{ once: true }}
              className="text-center mb-12"
            >
              <h2 className="text-4xl md:text-5xl font-bold mb-4">
                T·∫°i sao ch·ªçn Life Lessons? üíé
              </h2>
            </motion.div>

            <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
              {benefits.map((benefit, index) => (
                <motion.div
                  key={index}
                  initial={{ opacity: 0, x: -20 }}
                  whileInView={{ opacity: 1, x: 0 }}
                  viewport={{ once: true }}
                  transition={{ delay: index * 0.1 }}
                  className="flex items-start gap-3 p-4 rounded-xl hover:bg-background/50 transition-colors"
                >
                  <CheckCircle2 className="text-green-500 flex-shrink-0 mt-0.5" size={24} />
                  <span className="text-lg">{benefit}</span>
                </motion.div>
              ))}
            </div>
          </div>
        </div>
      </section>

      {/* CTA Section */}
      <section className="py-20 relative overflow-hidden">
        <div className="absolute inset-0 bg-gradient-to-br from-purple-500/10 via-blue-500/10 to-pink-500/10" />
        <div className="container mx-auto px-4 relative z-10">
          <motion.div
            initial={{ opacity: 0, scale: 0.95 }}
            whileInView={{ opacity: 1, scale: 1 }}
            viewport={{ once: true }}
            className="max-w-4xl mx-auto glass-card p-12 md:p-16 rounded-3xl text-center"
          >
            <Heart className="w-20 h-20 mx-auto mb-6 text-purple-500" />
            <h2 className="text-4xl md:text-5xl font-bold mb-6">
              S·∫µn s√†ng b·∫Øt ƒë·∫ßu ch∆∞a? üöÄ
            </h2>
            <p className="text-xl text-muted-foreground mb-8 max-w-2xl mx-auto">
              Tham gia ngay h√¥m nay v√† b·∫Øt ƒë·∫ßu h√†nh tr√¨nh 10,000 b√†i h·ªçc.
              Ho√†n to√†n mi·ªÖn ph√≠, kh√¥ng c·∫ßn th·∫ª t√≠n d·ª•ng.
            </p>
            <Link href="/signup">
              <motion.button
                whileHover={{ scale: 1.05 }}
                whileTap={{ scale: 0.95 }}
                className="btn-modern px-12 py-5 text-xl rounded-2xl shadow-2xl"
              >
                <Sparkles className="inline mr-2" size={24} />
                T·∫°o t√†i kho·∫£n mi·ªÖn ph√≠
              </motion.button>
            </Link>
          </motion.div>
        </div>
      </section>

      {/* Footer */}
      <footer className="py-12 border-t border-border">
        <div className="container mx-auto px-4">
          <div className="flex flex-col md:flex-row justify-between items-center gap-4">
            <div className="flex items-center gap-2">
              <BookOpen className="text-purple-500" size={24} />
              <span className="font-bold text-xl">Life Lessons</span>
            </div>
            <div className="text-sm text-muted-foreground">
              ¬© 2025 Life Lessons. Made with üíú for lifelong learners.
            </div>
            <div className="flex gap-6">
              <Link href="/login" className="text-sm hover:text-purple-500 transition-colors">
                ƒêƒÉng nh·∫≠p
              </Link>
              <Link href="/signup" className="text-sm hover:text-purple-500 transition-colors">
                ƒêƒÉng k√Ω
              </Link>
            </div>
          </div>
        </div>
      </footer>
    </div>
  );
}
